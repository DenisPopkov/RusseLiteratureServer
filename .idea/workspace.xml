<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4da29625-0ac0-42b6-8466-ebec231f1e9f" name="Changes" comment="add: tests">
      <change afterPath="$PROJECT_DIR$/internal/lib/logger/handlers/slogdiscard/slogdiscard.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/af1bbccc-4453-413e-a177-be0795937623.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/af1bbccc-4453-413e-a177-be0795937623.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sqldialects.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sqldialects.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/app/grpc/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/app/grpc/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/domain/models/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/domain/models/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/grpc/auth/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/grpc/auth/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/lib/jwt/jwt.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/lib/jwt/jwt.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/lib/logger/handlers/slogpretty/slogpretty.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/lib/logger/handlers/slogpretty/slogpretty.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/auth/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/services/auth/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/storage/sqlite/sqlite.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/storage/sqlite/sqlite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/services/storage/storage.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/storage/storage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/1_init.up.sql" beforeDir="false" afterPath="$PROJECT_DIR$/migrations/1_init.up.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/migrations/3_add_app.up.sql" beforeDir="false" afterPath="$PROJECT_DIR$/migrations/3_add_app.up.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/sumdb/sum.golang.org/latest" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/sumdb/sum.golang.org/latest" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/auth_register_login_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/auth_register_login_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/suite/suite.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/suite/suite.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.22.1" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$" />
        <option value="file://$PROJECT_DIR$/../protos" />
      </list>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2dQlXNUsusC9kUYKgGXcl8p5kvN" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build sso/cmd/migrator.executor&quot;: &quot;Run&quot;,
    &quot;Go Build.go build sso/cmd/sso.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegisterLogin_Login_HappyPath in sso/tests.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestRegister_FailCases in sso/tests.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.auth_register_login_test.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test sso/tests.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;feature/auth&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/denispopkov/GolandProjects/sso&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;go.vgo&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/internal" />
      <recent name="$PROJECT_DIR$/config" />
      <recent name="$PROJECT_DIR$/internal/lib" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test sso/tests">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="sso" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRegisterLogin_DuplicatedRegistration in sso/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sso" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="sso/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRegisterLogin_DuplicatedRegistration\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRegister_FailCases in sso/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sso" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="sso/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRegister_FailCases\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRegister_FailCases/Register_with_Empty_Pho in sso/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sso" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="sso/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRegister_FailCases\E$/^\QRegister_with_Empty_Pho\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRegister_FailCases/Register_with_Empty_Phone in sso/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sso" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="sso/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRegister_FailCases\E$/^\QRegister_with_Empty_Phone\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="sso" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test sso/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="sso" />
      <working_directory value="$PROJECT_DIR$/tests" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="sso/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test sso/tests" />
        <item itemvalue="Go Test.TestRegister_FailCases/Register_with_Empty_Phone in sso/tests" />
        <item itemvalue="Go Test.TestRegister_FailCases/Register_with_Empty_Pho in sso/tests" />
        <item itemvalue="Go Test.TestRegister_FailCases in sso/tests" />
        <item itemvalue="Go Test.TestRegisterLogin_DuplicatedRegistration in sso/tests" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-2946fb9b3188-155fe4b6e3a0-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.14475.38" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="init: project" />
    <MESSAGE value="fix: module proto name" />
    <MESSAGE value="add: task" />
    <MESSAGE value="fix: package name" />
    <MESSAGE value="add: multicolor logger" />
    <MESSAGE value="refactor: config" />
    <MESSAGE value="remove: unused logger code" />
    <MESSAGE value="add: base logic for auth methods" />
    <MESSAGE value="add: graceful shutdown" />
    <MESSAGE value="add: login method logic" />
    <MESSAGE value="add: register and admin handler" />
    <MESSAGE value="add: register new user method" />
    <MESSAGE value="add: login user method" />
    <MESSAGE value="add: is admin method" />
    <MESSAGE value="refactor: provide error for register and is admin" />
    <MESSAGE value="add: migration util" />
    <MESSAGE value="add: migration rules" />
    <MESSAGE value="add: sqlite logic" />
    <MESSAGE value="add: tests" />
    <option name="LAST_COMMIT_MESSAGE" value="add: tests" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>